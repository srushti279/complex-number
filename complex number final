#include <iostream>
using namespace std;

class Complex {
    double real;
    double imag;

public:
    Complex() : real(0), imag(0) {}
    Complex(double r, double i) : real(r), imag(i) {}

    Complex operator+(const Complex& other) const {
        return Complex(real + other.real, imag + other.imag);
    }

    Complex operator*(const Complex& other) const {
        return Complex(real * other.real - imag * other.imag, real * other.imag + imag * other.real);
    }

    friend ostream& operator<<(ostream& out, const Complex& c);
    friend istream& operator>>(istream& in, Complex& c);
};

ostream& operator<<(ostream& out, const Complex& c) {
    out << c.real;
    if (c.imag >= 0) out << "+";
    out << c.imag << "i";
    return out;
}

istream& operator>>(istream& in, Complex& c) {
    char sign, i_char;
    in >> c.real >> sign >> c.imag >> i_char;
    if (sign == '-') c.imag = -c.imag;
    return in;
}

int main() {
    Complex C1(2, 3);
    Complex C2(4, 5);
    Complex Sum = C1 + C2;
    Complex Mult = C1 * C2;

    cout << "C1: " << C1 << endl;
    cout << "C2: " << C2 << endl;
    cout << "Sum: " << Sum << endl;
    cout << "Mult: " << Mult << endl;

    Complex C3;
    cout << "Enter your complex number (a+bi): ";
    cin >> C3;
    cout << "You entered: " << C3 << endl;

    return 0;
}
